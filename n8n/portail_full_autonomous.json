{
  "name": "portail_full_autonomous",
  "nodes": [
    {
      "parameters": { "triggerTimes": { "item": [ { "mode": "everyX", "unit": "hours", "value": 2 } ] } },
      "name": "Cron (2h)",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 320]
    },
    {
      "parameters": {
        "mode": "passThrough",
        "options": {
          "values": { "string": [
            { "name": "listUrl",  "value": "https://portail.marchespublics.nc/?page=Entreprise.EntrepriseAdvancedSearch&AllCons" },
            { "name": "userAgent","value": "LegalNCBot/1.0 (+contact@legalnc)" },
            { "name": "baseUrl",  "value": "http://localhost:3000" },
            { "name": "ingestKey","value": "REPLACE_WITH_INGEST_SECRET" }
          ] }
        }
      },
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [480, 320]
    },
    {
      "parameters": {
        "url": "={{$json.listUrl}}",
        "options": { "headers": { "User-Agent": "={{$json.userAgent}}" }, "ignoreResponseCode": true, "fullResponse": true }
      },
      "name": "Fetch Listing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [720, 320]
    },
    {
      "parameters": {
        "functionCode": "const body = $json.body?.toString?.() || $json.body || ''; const re = /href=\\\"([^\\\"]*\\/entreprise\\/consultation\\/(\\d+)\\?orgAcronyme=([A-Za-z0-9]+))\\\"/g; const out=[]; const seen=new Set(); let m; while((m=re.exec(body))){ const url=new URL(m[1],'https://portail.marchespublics.nc').toString(); const id=m[2], org=m[3]; const key=id+':'+org; if(seen.has(key)) continue; seen.add(key); out.push({ json: { id, org, url } }); } return out;"
      },
      "name": "Extract Consultation URLs",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [960, 320]
    },
    {
      "parameters": {
        "url": "={{$json.url}}",
        "options": { "headers": { "User-Agent": "={{$json.userAgent}}" }, "ignoreResponseCode": true, "fullResponse": true }
      },
      "name": "Fetch Consultation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1200, 320]
    },
    {
      "parameters": {
        "functionCode": "const html = $json.body?.toString?.() || $json.body || ''; function stripTags(s){return (s||'').replace(/<[^>]+>/g,' ').replace(/\\s+/g,' ').trim();} const deadline=(html.match(/Date et heure limite de remise des plis\\s*:\\s*([^<]+)/i)||[])[1]||''; const reference=(html.match(/R[ée]f[ée]rence\\s*:\\s*([^<]+)/i)||html.match(/Référence\\s*:\\s*([^<]+)/i)||[]; const referenceVal=Array.isArray(reference)?reference[1]||'':reference; const intitule=(html.match(/Intitul[ée]\\s*:\\s*([^<]+)/i)||[])[1]||''; const organisme=(html.match(/Organisme\\s*:\\s*([^<]+)/i)||[])[1]||''; const service=(html.match(/Service\\s*:\\s*([^<]+)/i)||[])[1]||''; const cpv=(html.match(/Code CPV\\s*:\\s*([^<]+)/i)||[])[1]||''; const hrefs=Array.from(html.matchAll(/href=\\\"([^\\\"]+\\.(?:pdf|PDF|docx|DOCX|doc|DOC))\\\"/g)).map(m=>m[1]); const absolute=hrefs.map(h=>h.startsWith('http')?h:new URL(h,'https://portail.marchespublics.nc').toString()); return [{ json: { id:$item(0).$node['Extract Consultation URLs'].json.id, org:$item(0).$node['Extract Consultation URLs'].json.org, url:$item(0).$node['Extract Consultation URLs'].json.url, tender:{ source:'portail.marchespublics.nc', ref:$item(0).$node['Extract Consultation URLs'].json.id+':'+$item(0).$node['Extract Consultation URLs'].json.org, buyer:stripTags(organisme||service||'Inconnu'), title:stripTags(intitule||referenceVal||'Consultation'), deadline_at:(()=>{const m=(deadline||'').match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})\\s+(\\d{2}):(\\d{2})/); if(!m) return null; const[_,d,M,Y,h,mn]=m; return `${Y}-${M}-${d}T${h}:${mn}:00+11:00`;})(), url:$item(0).$node['Extract Consultation URLs'].json.url, raw_json:{service,cpv} }, docs:absolute } }];"
      },
      "name": "Parse Consultation → Tender + Docs",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [1440, 320]
    },
    {
      "parameters": {
        "url": "={{$json.baseUrl}}/api/ingest/tenders",
        "options": { "headers": { "x-ingest-key":"={{$json.ingestKey}}","Content-Type":"application/json" } },
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { items: [$json.tender] } }}"
      },
      "name": "UPSERT /ingest/tenders",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1680, 320]
    },
    {
      "parameters": {
        "functionCode": "const res=$json; const ref=$item(0).$node['Parse Consultation → Tender + Docs'].json.tender.ref; const item=(res.items||[]).find((x)=>x.ref===ref); if(!item){return[{json:{error:'missing id after upsert',ref}}];} return[{json:{tenderId:item.id, source:'portail.marchespublics.nc', ref, docs:$item(0).$node['Parse Consultation → Tender + Docs'].json.docs}}];"
      },
      "name": "Resolve id",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [1920, 320]
    },
    {
      "parameters": {
        "url": "={{$json.baseUrl}}/api/ingest/tender-docs",
        "options": { "headers": { "x-ingest-key":"={{$json.ingestKey}}","Content-Type":"application/json" } },
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ $json }}"
      },
      "name": "POST /ingest/tender-docs",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2160, 320]
    },
    {
      "parameters": { "milliseconds": 800 },
      "name": "Wait 0.8s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [2380, 320]
    },
    {
      "parameters": {
        "url": "={{$json.baseUrl}}/api/parse/tender/{{$json.tenderId}}",
        "options": { "headers": { "x-parse-key": "={{$json.ingestKey}}" } }
      },
      "name": "POST /parse/tender/:id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2600, 320]
    }
  ],
  "connections": {
    "Cron (2h)": { "main": [ [ { "node": "Config", "type": "main", "index": 0 } ] ] },
    "Config": { "main": [ [ { "node": "Fetch Listing", "type": "main", "index": 0 } ] ] },
    "Fetch Listing": { "main": [ [ { "node": "Extract Consultation URLs", "type": "main", "index": 0 } ] ] },
    "Extract Consultation URLs": { "main": [ [ { "node": "Fetch Consultation", "type": "main", "index": 0 } ] ] },
    "Fetch Consultation": { "main": [ [ { "node": "Parse Consultation → Tender + Docs", "type": "main", "index": 0 } ] ] },
    "Parse Consultation → Tender + Docs": { "main": [ [ { "node": "UPSERT /ingest/tenders", "type": "main", "index": 0 } ] ] },
    "UPSERT /ingest/tenders": { "main": [ [ { "node": "Resolve id", "type": "main", "index": 0 } ] ] },
    "Resolve id": { "main": [ [ { "node": "POST /ingest/tender-docs", "type": "main", "index": 0 } ] ] },
    "POST /ingest/tender-docs": { "main": [ [ { "node": "Wait 0.8s", "type": "main", "index": 0 } ] ] },
    "Wait 0.8s": { "main": [ [ { "node": "POST /parse/tender/:id", "type": "main", "index": 0 } ] ] }
  }
}
